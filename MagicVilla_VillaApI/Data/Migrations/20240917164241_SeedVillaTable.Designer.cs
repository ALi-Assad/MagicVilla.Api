// <auto-generated />
using System;
using MagicVilla_VillaApI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_VillaApI.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240917164241_SeedVillaTable")]
    partial class SeedVillaTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_VillaApI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Pool, Wi-Fi, Breakfast",
                            CreatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8031),
                            Detials = "A beautiful villa with a stunning sunset view.",
                            ImageUrl = "https://example.com/images/sunset_villa.jpg",
                            Name = "Sunset Villa",
                            Occupancy = 4,
                            Rate = 250.0,
                            Sqft = 1500,
                            UpdatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8042)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Fireplace, Hiking Trails, Wi-Fi",
                            CreatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8046),
                            Detials = "A cozy retreat in the mountains.",
                            ImageUrl = "https://example.com/images/mountain_retreat.jpg",
                            Name = "Mountain Retreat",
                            Occupancy = 6,
                            Rate = 300.0,
                            Sqft = 2000,
                            UpdatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8047)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Beach Access, Wi-Fi, BBQ Grill",
                            CreatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8049),
                            Detials = "A charming bungalow right on the beach.",
                            ImageUrl = "https://example.com/images/beachfront_bungalow.jpg",
                            Name = "Beachfront Bungalow",
                            Occupancy = 5,
                            Rate = 400.0,
                            Sqft = 1800,
                            UpdatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8050)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Wi-Fi, Gym, Rooftop Access",
                            CreatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8053),
                            Detials = "A modern loft with a view of the city lights.",
                            ImageUrl = "https://example.com/images/city_lights_loft.jpg",
                            Name = "City Lights Loft",
                            Occupancy = 3,
                            Rate = 350.0,
                            Sqft = 1200,
                            UpdatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8053)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "Garden, Wi-Fi, Fireplace",
                            CreatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8056),
                            Detials = "A quaint cottage in the countryside.",
                            ImageUrl = "https://example.com/images/countryside_cottage.jpg",
                            Name = "Countryside Cottage",
                            Occupancy = 4,
                            Rate = 200.0,
                            Sqft = 1400,
                            UpdatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8056)
                        },
                        new
                        {
                            Id = 6,
                            Amenity = "Lake Access, Wi-Fi, Hot Tub",
                            CreatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8059),
                            Detials = "A luxurious lodge with a view of the lake.",
                            ImageUrl = "https://example.com/images/lakeview_lodge.jpg",
                            Name = "Lakeview Lodge",
                            Occupancy = 8,
                            Rate = 450.0,
                            Sqft = 2200,
                            UpdatedDate = new DateTime(2024, 9, 17, 19, 42, 40, 397, DateTimeKind.Local).AddTicks(8060)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
